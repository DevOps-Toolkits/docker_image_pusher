name: Docker Sync

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'

env:
  ALIYUN_REGISTRY: "${{ secrets.ALIYUN_REGISTRY }}"
  ALIYUN_NAME_SPACE: "${{ secrets.ALIYUN_NAME_SPACE }}"
  ALIYUN_REGISTRY_USER: "${{ secrets.ALIYUN_REGISTRY_USER }}"
  ALIYUN_REGISTRY_PASSWORD: "${{ secrets.ALIYUN_REGISTRY_PASSWORD }}"

jobs:
  sync-docker-images:
    name: Sync Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master

      - name: Restart Docker
        run: sudo service docker restart

      - name: Docker Login
        run: |
          echo "$ALIYUN_REGISTRY_PASSWORD" | docker login -u "$ALIYUN_REGISTRY_USER" --password-stdin "$ALIYUN_REGISTRY"

      - name: Check out code
        uses: actions/checkout@v4

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Sync Images
        run: |
          while IFS= read -r line || [ -n "$line" ]; do
              [[ -z "$line" || "$line" =~ ^\s*# ]] && continue

              source=$(echo "$line" | yq -r '.source // empty')
              target=$(echo "$line" | yq -r '.target // empty')
              platform=$(echo "$line" | yq -r '.platform // empty')

              if [[ -z "$source" ]]; then
                  echo "Error: 'source' is missing in the YAML entry: $line"
                  continue
              fi

              if [[ -z "$target" ]]; then
                  image_name_tag=$(echo "$source" | awk -F'/' '{print $NF}')
                  target="$ALIYUN_REGISTRY/$ALIYUN_NAME_SPACE/$image_name_tag"
              fi

              echo "Processing image: $source"
              echo "Target image: $target"
              echo "Platform: $platform"

              if [[ -n "$platform" ]]; then
                  docker pull --platform "$platform" "$source"
              else
                  docker pull "$source"
              fi

              docker tag "$source" "$target"
              docker push "$target"
              docker rmi "$source"
              docker rmi "$target"
              df -hT
          done < images.yaml

